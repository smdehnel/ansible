---
- name: Initialize servers
  hosts: all
  become: yes
  vars:
    salt_master_ip: 192.168.254.70  # Salt master's IP address

  tasks:
    - name: Add bash_history.sh to /etc/profile.d
      copy:
        src: /etc/ansible/roles/common/templates/bash_history.sh.j2
        dest: /etc/profile.d/bash_history.sh
        mode: '0755'

    - name: Ensure .bashrc has correct history settings
      lineinfile:
        path: "{{ ansible_facts.env.HOME }}/.bashrc"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^HISTSIZE=', line: 'HISTSIZE=10000' }
        - { regexp: '^HISTFILESIZE=', line: 'HISTFILESIZE=20000' }
        - { regexp: '^#.*shopt -s histappend', line: 'shopt -s histappend' }
        - { regexp: '^PROMPT_COMMAND=', line: 'PROMPT_COMMAND="history -a; history -n; $PROMPT_COMMAND"' }

    - name: Ensure .bashrc has correct history settings for root
      lineinfile:
        path: /root/.bashrc
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^HISTSIZE=', line: 'HISTSIZE=10000' }
        - { regexp: '^HISTFILESIZE=', line: 'HISTFILESIZE=20000' }
        - { regexp: '^#.*shopt -s histappend', line: 'shopt -s histappend' }
        - { regexp: '^PROMPT_COMMAND=', line: 'PROMPT_COMMAND="history -a; history -n; $PROMPT_COMMAND"' }

    - name: Install EPEL repository
      yum:
        name: epel-release
        state: present

    - name: Install Salt repository
      yum_repository:
        name: SaltStack
        description: SaltStack Official Repo
        baseurl: https://repo.saltproject.io/py3/redhat/9/x86_64/latest
        gpgcheck: yes
        gpgkey: https://repo.saltproject.io/py3/redhat/9/x86_64/latest/SALTSTACK-GPG-KEY.pub
        enabled: yes

    - name: Install Salt Minion
      yum:
        name: salt-minion
        state: present

    - name: Ensure Salt Minion is enabled and started
      systemd:
        name: salt-minion
        enabled: yes
        state: started

    - name: Copy SSH public key to servers
      ansible.builtin.authorized_key:
        user: "{{ ansible_facts.env.USER }}"
        state: present
        key: "{{ lookup('file', '/home/{{ ansible_facts.env.USER }}/.ssh/id_ed25519.pub') }}"

    - name: Gather facts
      setup:

    - name: Add new server hostname and IP to hosts.tmpl
      delegate_to: "{{ salt_master_ip }}"
      lineinfile:
        path: /git/salt/srv/salt/files/hosts.tmpl
        line: "{{ ansible_default_ipv4.address }} {{ ansible_hostname }}"
        state: present
      run_once: true

    - name: Accept Salt keys from new servers
      delegate_to: "{{ salt_master_ip }}"
      shell: |
        for minion in $(salt-key --list=unaccepted | grep -E '^[^-]'); do
          salt-key --accept=$minion -y;
        done
      run_once: true

    - name: Create master.conf with master IP
      copy:
        dest: /etc/salt/minion.d/master.conf
        content: |
          master: 192.168.254.70

    - name: Refresh Salt pillar data
      delegate_to: "{{ salt_master_ip }}"
      command: salt '*' saltutil.refresh_pillar
      run_once: true

    - name: Apply hosts state to Pi-hole servers
      delegate_to: "{{ salt_master_ip }}"
      command: salt -G 'roles:pihole_servers' state.apply states/hosts
      run_once: true

    - name: Copy updated hosts.tmpl to /srv/salt/files/hosts.tmpl
      delegate_to: "{{ salt_master_ip }}"
      command: cp /git/srv/salt/files/hosts.tmpl /srv/salt/files/hosts.tmpl
      run_once: true

    - name: Apply dnf_refresh_cache state to Rocky systems
      delegate_to: "{{ salt_master_ip }}"
      command: salt -G 'os:Rocky' state.apply states/dnf_refresh_cache
      run_once: true

    - name: Apply dnf_update state to Rocky systems
      delegate_to: "{{ salt_master_ip }}"
      command: salt -G 'os:Rocky' state.apply states/dnf_update
      run_once: true

    - name: Apply apt_refresh_cache state to Ubuntu systems
      delegate_to: "{{ salt_master_ip }}"
      command: salt -G 'os:Ubuntu' state.apply states/apt_refresh_cache
      run_once: true

    - name: Apply apt_update state to Ubuntu systems
      delegate_to: "{{ salt_master_ip }}"
      command: salt -G 'os:Ubuntu' state.apply states/apt_update
      run_once: true

    - name: Reboot servers
      reboot:
        msg: "Reboot initiated by Ansible after initialization tasks."
        reboot_timeout: 600
